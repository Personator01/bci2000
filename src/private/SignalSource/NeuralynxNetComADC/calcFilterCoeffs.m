fs=32000;
K=1:fs;
D = K(rem(fs,K)==0);
D(fs./D < 250) = [];
f=fopen('filterCoeffs.cpp','w');
fwrite(f,'\\Autogenerated filter coefficients for subsampling using matlab');
fwrite(f,newline);
fwrite(f,newline);
fwrite(f,['static uint32_t decimate[' num2str(length(D)-1) ']= {' num2str(D(2:end),'%u,') '};']);
fwrite(f,newline);
fwrite(f,newline);
string=['static std::vector<double> filterCoeffs[' num2str(length(D)-1) '][' num2str(filterOrder+1) ']={'];
fwrite(f,string);
bs=[];
for i=2:length(D)
    filt=dsp.LowpassFilter('FilterType','FIR','PassbandFrequency',(fs/D(i))/4,'StopbandFrequency',(fs/D(i))/2,'SampleRate',fs);
    bs{i}=filt.coeffs.Numerator;
    if(~isstable(bs{i},1))
        error('bla');
    end
    string=['std::vector<double> {' num2str(bs{i},'%.17e, ')];
    string(end)=[];
    string=[string '}'];
    if(i < length(D))
        string=[string ',' ];
    end
    fwrite(f,string);
    fwrite(f,newline);
end
string=['};'];
fwrite(f,string);
fclose(f);

%% test filter
fs=32000;
t=linspace(0,1,fs);
f=2000;
y=sin(2*pi*(f)*t);
figure;pwelch(y,[],[],[],fs);
figure,plot(t,y);


y_filtered=filter(bs{D==8},1,y);
hold on;
plot(t,y_filtered);
