Visualize:Property%20Sets:FilePlaybackADC matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left"), columns are property sets
System:Configuration matrix OperatorVersion= { Framework Revision Build } 1 3.0.1 % May%2031%202011%2017:41:38 // operator module version information
Connector:ConnectorInput:FilePlaybackADC list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:ConnectorInput:FilePlaybackADC string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Connector:ConnectorOutput:FilePlaybackADC string ConnectorOutputAddress= localhost:20320 localhost:20320 % % // IP address/port to write to, e.g. localhost:20320
Visualize:Application%20Window:ApplicationBase%%3a%%3aDisplayVisualization int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of application window (boolean)
Visualize:Application%20Window:ApplicationBase%%3a%%3aDisplayVisualization int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window:ApplicationBase%%3a%%3aDisplayVisualization int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Application:Window:ApplicationBase:FilePlaybackADC int WindowWidth= 1024 640 0 % // width of application window
Application:Window:ApplicationBase:FilePlaybackADC int WindowHeight= 768 480 0 % // height of application window
Application:Window:ApplicationBase:FilePlaybackADC int WindowLeft= 1280 0 % % // screen coordinate of application window's left edge
Application:Window:ApplicationBase:FilePlaybackADC int WindowTop= 0 0 % % // screen coordinate of application window's top edge
Application:Window:GaugeAppBase string WindowBackgroundColorGauges= 0xFFFFFF 0x505050 % % // background color (color)
Application:Window:GaugeAppBase int WindowWidthGauges= 1024 640 0 % // width of application window
Application:Window:GaugeAppBase int WindowHeightGauges= 768 480 0 % // height of application window
Application:Window:GaugeAppBase int WindowLeftGauges= 0 0 % % // screen coordinate of application window's left edge
Application:Window:GaugeAppBase int WindowTopGauges= 0 0 % % // screen coordinate of application window's top edge
Application:Gauges:GaugeApp matrix Gauges= 4 { caption type xpos ypos width height other } Ball xy .05 .05 .4 .4 { matrix 6 2 signal1 BallXPosTimes10000/10000 min1 0 max1 1 signal2 BallYPosTimes10000/10000 min2 0 max2 1 } Paddle xy .55 .55 .4 .4 { matrix 6 2 signal1 PaddleXPosTimes10000/10000 min1 0 max1 1 signal2 PaddleYPosTimes10000/10000 min2 0 max2 1 } Left%20Eye xy .05 .55 .4 .4 { matrix 6 2 signal1 EyetrackerLeftEyeGazeX min1 0 max1 65535 signal2 EyetrackerLeftEyeGazeY min2 0 max2 65535 } Right%20Eye xy .55 .05 .4 .4 { matrix 6 2 signal1 EyetrackerRightEyeGazeX min1 0 max1 65535 signal2 EyetrackerRightEyeGazeY min2 0 max2 65535 } // Parameterization of Gauges 
Application:Gauges:GaugeApp float UpdateTime= 20ms 100ms 0 % // The time which elapses between gauge updates. 
Application:Localization:Localization:FilePlaybackADC string Language= Default Default % % // Language for user messages
Application:Localization:Localization:FilePlaybackADC matrix LocalizedStrings= { German } { Timeout Be%20prepared%20... T } Inaktiv Achtung%20... T // Localized user messages
System:Core%20Connections string ApplicationPort= 1107 4200 1024 65535 // the Application module's listening port
System:Core%20Connections string ApplicationIP= 172.16.2.247 127.0.0.1 % % // the Application module's listening IP
System:Configuration matrix ApplicationVersion= { Framework Revision Build } 1 3.0.1 % May%20%205%202011%2019:40:08 // Application version information
System:Configuration matrix ApplicationFilterChain= 3 { Filter%20Name Position%20String } ConnectorInput 2.9999 ConnectorOutput 3.9999 GaugeApp 3.A // Application filter chain
Filtering:Hijacking:HijackFilter:FilePlaybackADC int Hijack= 0 0 0 1 // Turn on Hijacking? (boolean)
Filtering:Hijacking:HijackFilter:FilePlaybackADC matrix ControlSignal= 2 { State%20name Take%20Derivative? Offset Gain Take%20RMS? Output%20Channel } MousePosX 1 0.0 -1.0 0 Left MousePosX 1 0.0 1.0 0 Right // Hijack controller matrix 
Filtering:Hijacking:HijackFilter:FilePlaybackADC float HijackNoise= 0.0 1.0 0 % // baseline noise level 
Filtering:Audio%20Escape:AudioEscapeFilter:FilePlaybackADC string AudioEscapeLeft= % // name or index of left audio signal channel
Filtering:Audio%20Escape:AudioEscapeFilter:FilePlaybackADC string AudioEscapeRight= % // name or index of right audio signal channel
Filtering:SpatialFilter:FilePlaybackADC int SpatialFilterType= 3 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter:FilePlaybackADC intlist SpatialFilterCAROutput= 0 // list of output channels for the CAR if used
Filtering:SpatialFilter:SpatialFilter:FilePlaybackADC matrix SpatialFilter= 1 98 0 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 49 -1 -1 -1 -1 -1 -1 -1 49 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter:SpatialFilter:FilePlaybackADC int SFUseThreading= 1 0 0 1 // Use threading to calculate spatial filter (boolean)
Filtering:IIR%20Filter:FilterFilter:FilePlaybackADC float HighPassCorner= 0 0 0 % 
Filtering:IIR%20Filter:FilterFilter:FilePlaybackADC float LowPassCorner= 0 0 0 % 
Filtering:IIR%20Filter:FilterFilter:FilePlaybackADC float NotchCenter= 0 60Hz 0 % 
Filtering:IIR%20Filter:FilterFilter:FilePlaybackADC float FilterGain= 1.0 1.0 0 % 
Filtering:ARFilter:FilePlaybackADC int WindowLength= 0.300s 0.5s % % // Time window for spectrum computation
Filtering:ARFilter:FilePlaybackADC int Detrend= 1 0 0 2 // Detrend data? 0: no, 1: mean, 2: linear (enumeration)
Filtering:ARFilter:FilePlaybackADC int ModelOrder= 25 16 0 % // AR model order
Filtering:ARFilter:FilePlaybackADC int OutputType= 0 0 0 2 // 0: Spectral Amplitude, 1: Spectral Power, 2: AR Coefficients (enumeration)
Filtering:ARFilter:FilePlaybackADC float FirstBinCenter= 0Hz 0Hz % % // Center of first frequency bin (as a fraction of sampling rate or in Hz)
Filtering:ARFilter:FilePlaybackADC float LastBinCenter= 110Hz 30Hz % % // Center of last frequency bin (as a fraction of sampling rate or in Hz)
Filtering:ARFilter:FilePlaybackADC float BinWidth= 2Hz 3Hz % % // Width of spectral bins (as a fraction of sampling rate or in Hz)
Filtering:ARFilter:FilePlaybackADC int EvaluationsPerBin= 10 15 1 % // Number of uniformly spaced evaluation points entering into a single bin value
Filtering:LogFilter:LogFilter float LogFilterEps= 1e-8 1e-8 0 % // add this before taking the log, to avoid infinities
Filtering:LogFilter:LogFilter float LogFilterBase= 10 10 0 % // base to which log is taken (0 to disable)
Filtering:LogFilter:LogFilter float LogFilterGain= 20 20 % % // coefficient by which to multiply logged values
Filtering:LinearClassifier:FilePlaybackADC matrix Classifier= 5 { input%20channel input%20element%20(bin) output%20channel weight } 1 1 1 1 1 2 1 1 1 3 1 1 1 4 1 1 1 5 1 1 // Linear classification matrix in sparse representation
Filtering:Pairwise%20Coupling:PairwiseCoupling:FilePlaybackADC int EnablePairwiseCoupling= 0 0 0 1 // turn on pairwise coupling transformation (boolean) 
Filtering:Pairwise%20Coupling:PairwiseCoupling:FilePlaybackADC matrix PairwiseCouplingMatrix= 3 { Input%20Channel Group Negative%20Class Positive%20Class Shift Scaling Training%20Set%20Size } IntentionVsMovement P Intention Movement 0.0 1.0 100 IntentionVsRest P Intention Rest 0.0 1.0 100 MovementVsRest P Movement Rest 0.0 1.0 100 
Filtering:Pairwise%20Coupling:PairwiseCoupling:FilePlaybackADC matrix PairwiseCouplingTest= 0 1 0.5 % % 
Filtering:LPFilter:FilePlaybackADC float LPTimeConstant= 0 16s 0 % // time constant for the low pass filter
Filtering:ExpressionFilter:FilePlaybackADC matrix Expressions= 1 1 Signal(1,1) // expressions used to compute the output of the ExpressionFilter (rows are channels; empty matrix for none)
Filtering:Normalizer:FilePlaybackADC floatlist NormalizerOffsets= 1 10369.8 0 % % // normalizer offsets
Filtering:Normalizer:FilePlaybackADC floatlist NormalizerGains= 1 0.000482145 0 % % // normalizer gain values
Filtering:Normalizer:FilePlaybackADC intlist Adaptation= 1 0 0 0 3 // 0: no adaptation, 1: zero mean, 2: zero mean, unit variance, 3: normalize around fixed offset value, (enumeration)
Filtering:Normalizer:FilePlaybackADC matrix BufferConditions= 1 1 1 // expressions corresponding to data buffers (columns correspond to output channels, multiple rows correspond to multiple buffers)
Filtering:Normalizer:FilePlaybackADC float BufferLength= 20s 9s % % // time window of past data per buffer that enters into statistic
Filtering:Normalizer:FilePlaybackADC string UpdateTrigger= % // expression to trigger offset/gain update when changing from 0 (use empty string for continuous update)
System:Core%20Connections string SignalProcessingPort= 1105 4200 1024 65535 // the SignalProcessing module's listening port
System:Core%20Connections string SignalProcessingIP= 172.16.2.247 127.0.0.1 % % // the SignalProcessing module's listening IP
System:Configuration matrix SignalProcessingVersion= { Framework Revision Build } 1 3.0.1 % Jun%20%202%202011%2012:41:26 // SignalProcessing version information
System:Configuration matrix SignalProcessingFilterChain= 11 { Filter%20Name Position%20String } HijackFilter 2.A2 AudioEscapeFilter 2.A3 SpatialFilter 2.B FilterFilter 2.B3 ARFilter 2.C LogFilter 2.C2 LinearClassifier 2.D PairwiseCoupling 2.D0 LPFilter 2.D1 ExpressionFilter 2.D2 Normalizer 2.E // SignalProcessing filter chain
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeAudioEscapeFilter= 0 0 0 1 // Visualize AudioEscapeFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeHijackFilter= 0 0 0 1 // Visualize HijackFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeSpatialFilter= 0 0 0 1 // Visualize SpatialFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeFilterFilter= 0 0 0 1 // Visualize FilterFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeARFilter= 1 0 0 1 // Visualize ARFilter output (boolean)
Visualize:Processing%20Stages int VisualizeLogFilter= 0 0 0 1 // Visualize LogFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeLinearClassifier= 0 0 0 1 // Visualize LinearClassifier output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeExpressionFilter= 0 0 0 1 // Visualize ExpressionFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeLPFilter= 0 0 0 1 // Visualize LPFilter output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizePairwiseCoupling= 0 0 0 1 // Visualize PairwiseCoupling output (boolean)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeNormalizer= 0 0 0 1 // Visualize Normalizer output (boolean)
Source:Signal%20Properties:DataIOFilter int SourceCh= 112 16 1 % // number of digitized and stored channels
Source:Signal%20Properties:DataIOFilter int SampleBlockSize= 60 32 1 % // number of samples transmitted at a time
Source:Signal%20Properties:DataIOFilter int SamplingRate= 1200 256Hz 1 % // sample rate
Source:Signal%20Properties:DataIOFilter list ChannelNames= 0 // list of channel names
Source:Signal%20Properties:DataIOFilter floatlist SourceChOffset= 112 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 % % // Offset for channels in A/D units
Source:Signal%20Properties:DataIOFilter floatlist SourceChGain= 112 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0.003 % % // gain for each channel (A/D units -> muV)
Storage:Data%20Location:DataIOFilter string DataDirectory= ..\data ..\data % % // path to top level data directory (directory)
Storage:Session:DataIOFilter string SubjectName= test Name % % // subject alias
Storage:Session:DataIOFilter string SubjectSession= 001 001 % % // three-digit session number
Storage:Session:DataIOFilter string SubjectRun= 42 00 % % // two-digit run number
Storage:Documentation:DataIOFilter string ID_System= % // BCI2000 System Code
Storage:Documentation:DataIOFilter string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation:DataIOFilter string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing:DataIOFilter int VisualizeTiming= 1 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceDecimation= 2 auto % % // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceTime= 8s 2s 0 % // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter int SourceMin= -100muV -100muV % % // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter int SourceMax= 100muV 100muV % % // raw signal vis Max Value
Source:Playback:FilePlaybackADC string PlaybackFileName= ..\data\fingers.dat // the path to the existing BCI2000 data file (inputfile)
Storage:Documentation:BCI2000FileWriter:FilePlaybackADC int SavePrmFile= 0 1 0 1 // save additional parameter file (0=no, 1=yes) (boolean)
Source:gUSBampADC:FilePlaybackADC intlist SourceChList= 112 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 0 1 136 // list of channels to digitize
Source:gUSBampADC:FilePlaybackADC intlist SourceChDevices= 7 16 16 16 16 16 16 16 16 1 17 // number of digitized channels per device
Source:gUSBampADC:FilePlaybackADC int NumBuffers= 2 1 2 32 // number of software buffers to use
Source:gUSBampADC:FilePlaybackADC string DeviceIDMaster= UA-2008.06.01 // deviceID for the device whose SYNC goes to the slaves
Source:gUSBampADC:FilePlaybackADC int FilterEnabled= 1 1 0 1 // Enable pass band filter (0=no, 1=yes)
Source:gUSBampADC:FilePlaybackADC float FilterHighPass= 0.5 0.1 0 50 // high pass filter for pass band
Source:gUSBampADC:FilePlaybackADC float FilterLowPass= 200 60 0 4000 // low pass filter for pass band
Source:gUSBampADC:FilePlaybackADC int FilterModelOrder= 8 8 1 12 // filter model order for pass band
Source:gUSBampADC:FilePlaybackADC int FilterType= 1 1 1 2 // filter type for pass band (1=BUTTERWORTH, 2=CHEBYSHEV)
Source:gUSBampADC:FilePlaybackADC int NotchEnabled= 0 1 0 1 // Enable notch (0=no, 1=yes)
Source:gUSBampADC:FilePlaybackADC float NotchHighPass= 58 58 0 70 // high pass filter for notch filter
Source:gUSBampADC:FilePlaybackADC float NotchLowPass= 62 62 0 4000 // low pass filter for notch filter
Source:gUSBampADC:FilePlaybackADC int NotchModelOrder= 4 4 1 10 // filter model order for notch filter
Source:gUSBampADC:FilePlaybackADC int NotchType= 1 1 1 2 // filter type for pass band (1=CHEBYSHEV, 2=BUTTERWORTH)
Source:gUSBampADC:FilePlaybackADC list DeviceIDs= 7 UA-2008.06.01 UA-2008.06.02 UA-2008.06.03 UA-2008.06.04 UA-2008.06.05 UA-2008.06.06 UA-2008.06.07 // list of USBamps to be used (or auto)
Source:gUSBampADC:FilePlaybackADC int DigitalInput= 0 0 0 1 // enable digital input:  0: false, 1: true (enumeration)
Source:gUSBampADC:FilePlaybackADC int DigitalOutput= 0 0 0 1 // enable digital output on block acquisition (boolean)
Source:gUSBampADC:FilePlaybackADC string DigitalOutputEx= % // expression for output on digital output 2 (expression)
Source:gUSBampADC:FilePlaybackADC int SignalType= 1 0 0 1 // numeric type of output signal:  0: int16, 1: float32 (enumeration)
Source:gUSBampADC:FilePlaybackADC int AcquisitionMode= 0 0 0 2 // data acquisition mode:  0: analog signal acquisition, 1: calibration, 2: impedance (enumeration)
Source:gUSBampADC:FilePlaybackADC int CommonGround= 1 0 0 1 // internally connect GNDs from all blocks:  0: false, 1: true (enumeration)
Source:gUSBampADC:FilePlaybackADC int CommonReference= 1 0 0 1 // internally connect Refs from all blocks:  0: false, 1: true (enumeration)
Source:Eyetracker:EyetrackerLogger:FilePlaybackADC string CalibrationData= C:\BCI2000.v2.0.ECoG\prog\Calibout.cal // calibration file (inputfile)
Source:Eyetracker:EyetrackerLogger:FilePlaybackADC string NetworkLocation= TT060-204-83900426.local. // network address of eyetracker
Source:Eyetracker:EyetrackerLogger:FilePlaybackADC int Port= 4455 // incoming port for eyetracker traffic
Application:Game:Game:FilePlaybackADC matrix VideoTheme= 8 { type texture } Block breakout/images/Block.bmp Block_2 breakout/images/Block_2.bmp Block_1 breakout/images/Block_1.bmp Ball breakout/images/basketball.png Paddle breakout/images/Paddle.bmp Background breakout/images/Background.bmp Reward breakout/images/coin.png Ineligible breakout/images/noentry.png // Graphical theme for the game
Application:Game:Game:FilePlaybackADC matrix AudioTheme= 7 { event sound } HitBlock breakout/sounds/tick.wav HitPaddle breakout/sounds/tack.wav HitSideOfPaddle breakout/sounds/tock.wav MissPaddle breakout/sounds/no.wav Reward breakout/sounds/kerching.wav HitBlockVariant breakout/sounds/tick_leftOnly.wav HitPaddleVariant breakout/sounds/tack_leftOnly.wav // Audio theme for the game
Application:Game:Game:FilePlaybackADC float AudioVolume= 1.0 1.0 0.0 1.0 // Game sound volume
Application:Game:Game:FilePlaybackADC string ClearColor= 0x224422 0x000000 0x000000 0xFFFFFF // Color to clear the gl screen to (color) 
Application:Game%20Appearance:BreakoutGame:FilePlaybackADC matrix Level= 6 6 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0 % % // Define block placement on breakout level 
Application:Game:BreakoutGame:FilePlaybackADC float VariantProportion= 0.10 0.0 0.0 0.5 // proportion of each eligible sound type to vary
Application:Game%20Appearance:BreakoutGame:FilePlaybackADC string TextColor= 0xFFFFFF 0x000000 0x000000 0xFFFFFF // Color for in game scoring text (color) 
Application:Game%20Appearance:BreakoutGame:FilePlaybackADC int TextSize= 13 13 6 % // Size for in game scoring text 
Application:Game%20Control:BreakoutGame:FilePlaybackADC string PaddleExpressionX= Signal(1,1) // Expression for X position of the paddle (-1:1) 
Application:Game%20Control:BreakoutGame:FilePlaybackADC int IntegratePaddleX= 1 1 0 1 // check to control x velocity, uncheck to control absolute x position (boolean)  
Application:Game%20Control:BreakoutGame:FilePlaybackADC string PaddleExpressionY= -0.8 // Expression for Y position of the paddle (-1:1) 
Application:Game%20Control:BreakoutGame:FilePlaybackADC int IntegratePaddleY= 0 1 0 1 // check to control y velocity, uncheck to control absolute y position (boolean)  
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float MinSpawnTime= 1.0 1.0 0.0 % // Minimum duration in seconds of a respawned path  
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float MaxSpawnTime= 1.0 1.0 0.0 % // Maximum duration in seconds of a respawned path  
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float PaddleHeight= 0.1 0.01 0.0 2.0 // Height of the paddle rectangle (0-2) 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float PaddleWidth= 0.3 0.3 0.0 2.0 // Width of the paddle rectangle at GameDifficulty=0 (0-2) 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float PaddleWidthHitFactor= 0.90 0.90 0.0 % // Multiplier for the paddle width corresponding to a unit increase in GameDifficulty 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float BallRadius= 0.05 0.05 0.0 2.0 // Radius of the ball in game at GameDifficulty=0 (0-2)
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float BallRadiusHitFactor= 0.95 0.95 0.0 % // Multiplier for the ball radius corresponding to a unit increase in GameDifficulty 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float BallSpeed= 0.8 1.5 0.0 % // Ball speed (distance per second) at GameDifficulty=0 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float BallSpeedHitFactor= 1.02 1.04 0.0 % // Multiplier for the ball speed corresponding to a unit increase in GameDifficulty 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float InitialGameDifficulty= -5.0 0.0 % % // Starting point for staircase GameDifficulty 
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float StepSizeOnHit= 1.0 1.0 0.0 % // Increase in GameDifficulty per hit
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC float TargetAccuracy= 0.75 0.82 0.0 1.0 // Weighted-up-down staircase's target proportion of hits
Application:Game%20Challenge:BreakoutGame:FilePlaybackADC int ShowPredictor= 0 1 0 1 // Show a guide (boolean) 
Application:Game%20Rewards:BreakoutGame:FilePlaybackADC int PointsRequiredForReward= 3 4 1 % // Number of eligible points required for a reward (gold coin)  
Application:Game%20Rewards:BreakoutGame:FilePlaybackADC int MaxPointsPerStroke= 2 2 0 % // Maximum number of points that can be earned from striking the ball once 
Application:Game%20Rewards:BreakoutGame:FilePlaybackADC matrix RewardStrings= 7 2 0 Better%20luck%20next%20time 1 Not%20bad... 2 Pretty%20good! 3 Great!! 4 Excellent!! 5 Amazing!! 6 Fantastic!!! // Mapping from number-of-rewards to feedback strings
Source:Playback:FilePlaybackADC int PlaybackStartTime= 0s 0s % % // the start time of the file
Source:Playback:FilePlaybackADC list PlaybackChList= 0 // a list of channels to acquire (empty for all). Use indices, or labels from the ChannelNames as they were recorded in the file.
Source:Playback:FilePlaybackADC float PlaybackSpeed= 1 1 0 100 // a value indicating the factor by which the acquisition should be sped up
Source:Playback:FilePlaybackADC int PlaybackStates= 1 0 0 1 // play back state variable values (except timestamps)? (boolean)
Source:Playback:FilePlaybackADC int PlaybackLooped= 0 0 0 1 // loop playback at the end of the data file instead of suspending execution (boolean)
Source:Alignment:AlignmentFilter int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing:TransmissionFilter list TransmitChList= 112 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 // list of transmitted channels
System:Command%20Line%20Arguments variant FileFormat= Null Null Null Null 
System:Command%20Line%20Arguments variant EvaluateTiming= 0 0 0 0 
System:Core%20Connections string SignalSourcePort= 1106 4200 1024 65535 // the SignalSource module's listening port
System:Core%20Connections string SignalSourceIP= 172.16.2.247 127.0.0.1 % % // the SignalSource module's listening IP
System:Configuration matrix SignalSourceVersion= { Framework Revision Build } 1 3.0.1 % May%2010%202011%2020:31:33 // SignalSource version information
System:Configuration matrix SignalSourceFilterChain= 8 { Filter%20Name Position%20String } DataIOFilter 0 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 FilePlaybackADC 1 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
System:State%20Vector int StateVectorLength= 58 16 1 30 // length of the state vector in bytes
