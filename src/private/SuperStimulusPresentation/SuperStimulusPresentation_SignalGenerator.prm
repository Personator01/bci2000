Visualize:Property%20Sets matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left", columns are property sets
System:Configuration matrix OperatorVersion= { Framework Revision Build Config Protocol } 1 3.05 ,%20 MSVC-17.0.60610.1-AMD64,%20release,%20Jan%20%202%202014%2020:36:22,%20Durandal@The-Mirata USE_DYNAMIC_IMPORTS:ON%20USE_SSE2:OFF%20USE_PRECOMPILED_HEADERS: 627A12D0 // operator module version information(readonly)
System:Protocol int OperatorBackLink= 1 1 0 1 // Send final state and signal information to Operator (boolean)(readonly)
System:Protocol int AutoConfig= 1 1 0 1 // Use AutoConfig protocol extension (boolean)(readonly)
Source:Signal%20Properties:DataIOFilter list ChannelNames= 1 auto // list of channel names
Storage:Data%20Location:DataIOFilter string DataDirectory= ../data ..\data % % // path to top level data directory (directory)
Storage:Session:DataIOFilter string SubjectName= test Name % % // subject alias
Storage:Session:DataIOFilter string SubjectSession= 001 001 % % // three-digit session number
Storage:Session:DataIOFilter string SubjectRun= 01 00 % % // two-digit run number
Storage:Documentation:DataIOFilter string ID_System= % // BCI2000 System Code
Storage:Documentation:DataIOFilter string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation:DataIOFilter string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing:DataIOFilter int VisualizeTiming= 1 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceDecimation= 1 auto % % // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:Source%20Signal:DataIOFilter int VisualizeSourceTime= 2s 2s 0 % // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter int SourceMin= auto // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter int SourceMax= auto // raw signal vis Max Value
Source:Signal%20Properties:SignalGeneratorADC int SourceCh= 16 16 1 % // number of digitized and stored channels
Source:Signal%20Properties:SignalGeneratorADC int SampleBlockSize= 8 32 1 % // number of samples transmitted at a time
Source:Signal%20Properties:SignalGeneratorADC int SamplingRate= 256 256Hz 1 % // sample rate
Source:SignalGeneratorADC list SourceChOffset= 1 auto 
Source:SignalGeneratorADC list SourceChGain= 1 auto 
Source:SignalGeneratorADC int ModulateAmplitude= 0 0 0 1 // Modulate the amplitude with the mouse (0=no, 1=yes) (boolean)
Source:SignalGeneratorADC int SineChannelX= 0 0 0 % // Channel number of sinewave controlled by mouse x position
Source:SignalGeneratorADC int SineChannelY= 0 0 0 % // Channel number of sinewave controlled by mouse y position (0 for all)
Source:SignalGeneratorADC int SineChannelZ= 0 0 0 % // Channel number of sinewave controlled by mouse key state
Source:SignalGeneratorADC float SineFrequency= 0 10Hz % % // Frequency of sine wave
Source:SignalGeneratorADC int SineAmplitude= 0 100muV % % // Amplitude of sine wave
Source:SignalGeneratorADC int NoiseAmplitude= 30muV 30muV % % // Amplitude of white noise (common to all channels)
Source:SignalGeneratorADC int DCOffset= 60muV 0muV % % // DC offset (common to all channels)
Source:SignalGeneratorADC string AmplitudeMultiplier= 1 1 % % // Expression to multiply amplitude by
Source:SignalGeneratorADC string OffsetMultiplier= StimulusType StimulusType % % // Expression to multiply offset by
Source:SignalGeneratorADC int SignalType= 0 0 0 2 // numeric type of output signal:  0: int16, 1: float32, 2: int32 (enumeration)
Source:SignalGeneratorADC matrix SourceProperties= 0 { Frequency Amplitude } // Source properties
Source:SignalGeneratorADC matrix MixingMatrix= 0 1 // Source-to-sensor projection, rows are sources, columns are sensors
Storage:BCI2000FileWriter string FileFormat= dat // format of data file (readonly)
Storage:Documentation:BCI2000FileWriter string StorageTime= % // time of beginning of data storage
Source:Alignment:AlignmentFilter int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing:TransmissionFilter list TransmitChList= 4 1 2 3 4 // list of transmitted channels: Channel names may contain * and ? wildcards,  and character ranges enclosed in []; wildcard patterns may be negated by prepending an exclamation mark.  Ranges of channels may be specified using : or - to separate begin from end.
System:Additional%20Connections:EventLink int EventLink= 1 1 0 1 // Send events from Operator to Source module (boolean)(readonly)
Storage:Data%20Location:RunManager string DataFile= $%7bSubjectName%7d$%7bSubjectSession%7d/$%7bSubjectName%7dS$%7bSubjectSession%7dR$%7bSubjectRun%7d.$%7bFileFormat%7d // name of data file relative to DataDirectory
System:Core%20Connections string SignalSourceIP= 127.0.0.1 127.0.0.1 % % // the SignalSource module's listening IP(readonly)
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP(readonly)
System:Core%20Connections string SignalSourcePort= 9824 4200 1024 65535 // the SignalSource module's listening port(readonly)
System:Configuration matrix SignalSourceVersion= { Framework Revision Build Config } 1 3.05 ,%20 MSVC-17.0.60610.1-AMD64,%20release,%20Jan%20%202%202014%2020:36:22,%20Durandal@The-Mirata USE_DYNAMIC_IMPORTS:ON%20USE_SSE2:OFF%20USE_PRECOMPILED_HEADERS: SignalSource version information // (readonly)
System:Configuration matrix SignalSourceFilterChain= 8 { Filter%20Name Position%20String } DataIOFilter 0 SignalGeneratorADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain(readonly)
System:Configuration matrix Filters= 12 1 /1/DataIOFilter /1/SignalGeneratorADC /1/BCI2000FileWriter /1/AlignmentFilter /1/TransmissionFilter /2/SpatialFilter /2/P3TemporalFilter /2/LinearClassifier /3/ConnectorInput /3/SuperStimulusPresentationTask /3/KeystrokeFilter /3/ConnectorOutput // Filter Directory(readonly)
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
Filtering:SpatialFilter int SpatialFilterType= 1 2 0 3 // spatial filter type 0: none, 1: full matrix, 2: sparse matrix, 3: common average reference (CAR) (enumeration)
Filtering:SpatialFilter:SpatialFilter matrix SpatialFilter= 4 4 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 % % // columns represent input channels, rows represent output channels
Filtering:SpatialFilter:SpatialFilter intlist SpatialFilterCAROutput= 0 // when using CAR filter type: list of output channels, or empty for all channels
Filtering:SpatialFilter:SpatialFilter int SpatialFilterMissingChannels= 1 0 0 1 // how to handle missing channels 0: ignore, 1: report error (enumeration)
Filtering:P3TemporalFilter int EpochLength= 500ms 500ms 0 % // Length of data epoch from stimulus onset
Filtering:P3TemporalFilter int EpochsToAverage= 0 1 0 % // Number of epochs to average
Filtering:P3TemporalFilter int SingleEpochMode= 0 0 0 1 // Report result after each epoch (boolean)
Visualize:P3TemporalFilter int VisualizeP3TemporalFiltering= 0 0 0 1 // Visualize averaged epochs (0=no 1=yes) (boolean)
Visualize:P3TemporalFilter int TargetERPChannel= 1 1 % % // Input channel for which to display ERP data
Filtering:LinearClassifier matrix Classifier= 2 { input%20channel input%20element%20(bin) output%20channel weight } 1 4 1 1 1 6 2 1 // Linear classification matrix in sparse representation
System:Core%20Connections string SignalProcessingIP= 127.0.0.1 127.0.0.1 % % // the SignalProcessing module's listening IP(readonly)
System:Core%20Connections string SignalProcessingPort= 9826 4200 1024 65535 // the SignalProcessing module's listening port(readonly)
System:Configuration matrix SignalProcessingVersion= { Framework Revision Build Config } 1 3.05 ,%20 MSVC-17.0.60610.1-AMD64,%20release,%20Jan%20%202%202014%2020:36:22,%20Durandal@The-Mirata USE_DYNAMIC_IMPORTS:ON%20USE_SSE2:OFF%20USE_PRECOMPILED_HEADERS: SignalProcessing version information // (readonly)
System:Configuration matrix SignalProcessingFilterChain= 3 { Filter%20Name Position%20String } SpatialFilter 2.A P3TemporalFilter 2.B LinearClassifier 2.C // SignalProcessing filter chain(readonly)
Visualize:Processing%20Stages int VisualizeSpatialFilter= 0 0 0 1 // Visualize SpatialFilter output (boolean)
Visualize:Processing%20Stages int VisualizeLinearClassifier= 0 0 0 1 // Visualize LinearClassifier output (boolean)
Connector:ConnectorInput list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:ConnectorInput string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Application:Application%20Window:ApplicationWindow int WindowWidth= 640 640 0 % // width of Application window
Application:Application%20Window:ApplicationWindow int WindowHeight= 480 480 0 % // height of Application window
Application:Application%20Window:ApplicationWindow int WindowLeft= 0 0 % % // screen coordinate of Application window's left edge
Application:Application%20Window:ApplicationWindow int WindowTop= 0 0 % % // screen coordinate of Application window's top edge
Application:Application%20Window:ApplicationWindow string WindowBackgroundColor= 0x505050 0x505050 % % // Application window background color (color)
Visualize:Application%20Window:ApplicationWindow int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:Application%20Window:ApplicationWindow int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window:ApplicationWindow int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Visualize:Application%20Log:ApplicationBase int ShowAppLog= 1 0 0 1 // Show application log window (boolean)
Application:Sequencing:StimulusTask float PreRunDuration= 1s 1 0 % // pause preceding first sequence
Application:Sequencing:StimulusTask float PostRunDuration= 1s 0 0 % // pause following last sequence
Application:Sequencing:StimulusTask float PreSequenceDuration= 2s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing:StimulusTask float PostSequenceDuration= 2s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing:StimulusTask float StimulusDuration= 375ms 40ms 0 % // stimulus duration
Application:Sequencing:StimulusTask string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing:StimulusTask float ISIMinDuration= 375ms 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing:StimulusTask float ISIMaxDuration= 437.5ms 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing:StimulusTask int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing:StimulusTask int DisplayResults= 1 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing:StimulusTask int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing:StimulusTask float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing:SuperStimulusPresentationTask intlist Sequence= 6 1 6 2 3 4 5 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing:SuperStimulusPresentationTask int SequenceType= 0 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing:SuperStimulusPresentationTask int NumberOfSequences= 2 1 0 % // number of sequence repetitions
Application:Sequencing:SuperStimulusPresentationTask intlist ToBeCopied= 4 1 2 3 4 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing:SuperStimulusPresentationTask string UserComment= Test%20Run // User comments for a specific run
Application:Stimuli:SuperStimulusPresentationTask matrix Stimuli= { caption icon audio video StimulusDuration AudioVolume } { stimulus1 stimulus2 stimulus3 stimulus4 stimulus5 stimulus6 } One Two Three Four Five Six images/1.bmp images/2.bmp images/3.bmp images/4.bmp images/5.bmp images/6.bmp sounds/1.wav sounds/2.wav sounds/3.wav sounds/4.wav sounds/5.wav sounds/6.wav videos/1.mp4 videos/2.mp4 videos/3.mp4 videos/4.mp4 videos/5.mp4 videos/6.mp4 3500ms 3500ms 3500ms 3500ms 3500ms 3500ms 85 88 91 94 97 100 // captions and icons to be displayed, sounds to be played for different stimuli, movies to be displayed and played
Application:Stimuli:SuperStimulusPresentationTask matrix FocusOn= { caption icon audio video } { focuson } Please%20focus%20on images/focuson.bmp sounds/uh-uh.wav videos/FocusOn.mp4 // initial announcement what to focus on
Application:Stimuli:SuperStimulusPresentationTask matrix Result= { caption icon audio video } { result } The%20result%20was images/result.bmp sounds/uh-uh.wav videos/Result.mp4 // final result announcement 
Application:Stimuli:SuperStimulusPresentationTask int StimulusWidth= 0 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli:SuperStimulusPresentationTask int CaptionHeight= 10 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli:SuperStimulusPresentationTask string CaptionColor= 0x004040 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli:SuperStimulusPresentationTask string BackgroundColor= 0x80FF00 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli:SuperStimulusPresentationTask int CaptionSwitch= 0 1 0 1 // Present captions (boolean)
Application:Stimuli:SuperStimulusPresentationTask int IconSwitch= 0 1 0 1 // Present icon files (boolean)
Application:Stimuli:SuperStimulusPresentationTask int AudioSwitch= 1 1 0 1 // Present audio files (boolean)
Application:Stimuli:SuperStimulusPresentationTask int VideoSwitch= 1 1 0 1 // Present video files (boolean)
Application:Stimuli:SuperStimulusPresentationTask float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Stimuli:SuperStimulusPresentationTask float VideoVolume= 100 100 0 100 // Volume for video playback in percent
Application:Stimuli:SuperStimulusPresentationTask int VideoStretching= 0 0 0 1 // Allow videos to fill the screen, ignoring aspect ratio (boolean)
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
Connector:ConnectorOutput string ConnectorOutputAddress= % localhost:20321 % % // one or more IP:Port combinations, e.g. localhost:20321
Application:Localization:Localization string Language= Default Default % % // Language for user messages
Application:Localization:Localization matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages
System:Core%20Connections string ApplicationIP= 127.0.0.1 127.0.0.1 % % // the Application module's listening IP(readonly)
System:Core%20Connections string ApplicationPort= 9828 4200 1024 65535 // the Application module's listening port(readonly)
System:Configuration matrix ApplicationVersion= { Framework Revision Build Config } 1 3.05 ,%20 MSVC-17.0.60610.1-AMD64,%20debug,%20Jan%20%206%202014%2015:51:50,%20Durandal@The-Mirata USE_DYNAMIC_IMPORTS:ON%20USE_SSE2:OFF%20USE_PRECOMPILED_HEADERS:ON Application version information // (readonly)
System:Configuration matrix ApplicationFilterChain= 4 { Filter%20Name Position%20String } ConnectorInput 2.9999 SuperStimulusPresentationTask 3 KeystrokeFilter 3.1 ConnectorOutput 3.9999 // Application filter chain(readonly)
System:Randomization int RandomSeed= 31052 0 % % // seed for the BCI2000 pseudo random number generator(readonly)
System:Randomization int RandomizationWarning= 1 1 0 1 // warn if subsequent Runs have identical RandomSeed value (boolean)(readonly)
