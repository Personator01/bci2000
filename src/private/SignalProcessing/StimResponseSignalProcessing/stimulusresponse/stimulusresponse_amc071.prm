Visualize:FilePlaybackADC matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left", columns are property sets
System:Version matrix OperatorVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T17:20:05Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // operator module version information (noedit)(readonly)
System:Protocol int AutoConfig= 1 1 0 1 // Use AutoConfig protocol extension (boolean)
System:Protocol int OperatorBackLink= 1 1 0 1 // Send final state and signal information to Operator (boolean)
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP (noedit)(readonly)
Visualize:StimResponseFilter matrix StimulusMarkers= 2 1 StimulusBegin StimulusEnd // Time-valued parameters that will be indicated by markers
Filtering:StimResponseFilter int EpochLength= 400ms 400ms 0 % // Length of data epoch from stimulus onset
Filtering:StimResponseFilter int StimulusLength= 48 48 0 % // Length of Digital Input Stimulus
Filtering:StimResponseFilter string DigitalInputNum= DigitalInput1 // Digital Input nemuber
Visualize:StimResponseFilter int VisualizeAvgTimeResponse= 1 0 0 1 // Visualize current epochs (0=no 1=yes) (boolean)
Visualize:StimResponseFilter int VisualizeFre= 1 0 0 1 // Visualize frequency response (0=no 1=yes) (boolean)
Visualize:StimResponseFilter int VisualizeTime= 1 0 0 1 // Visualize time response (0=no 1=yes) (boolean)
Filtering:StimResponseFilter list ReRefChList= 3 3 4 5 // reference channel for each amp, 0 or empty for unipolar measurement
Filtering:StimResponseFilter bool StimTriggerType= 0 0 0 1 // if use signal the stimulus can only be on channel one
Filtering:StimResponseFilter int MoveStimForward= 2 2 0 % // Move forward xx number of elements
Filtering:Voltage:StimResponseFilter float TBHighPassCorner= 0.1 0.1 0 % 
Filtering:Voltage:StimResponseFilter int TBHighPassOrder= 2 2 0 % 
Filtering:Voltage:StimResponseFilter float TBLowPassCorner= 170 170 0 % 
Filtering:Voltage:StimResponseFilter int TBLowPassOrder= 4 4 0 % 
Filtering:Voltage:StimResponseFilter float TBNotchCenter= 0 0 0 % 
Filtering:Voltage:StimResponseFilter int TBNotchOrder= 4 4 0 % 
Filtering:Voltage:StimResponseFilter float TBFilterGain= 1.0 1.0 0 % 
Filtering:Voltage:StimResponseFilter int TBDownsample= 1 1 0 % 
Filtering:Bandpower:StimResponseFilter float FBHighPassCorner= 70 70 0 % 
Filtering:Bandpower:StimResponseFilter int FBHighPassOrder= 2 2 0 % 
Filtering:Bandpower:StimResponseFilter float FBLowPassCorner= 170 170 0 % 
Filtering:Bandpower:StimResponseFilter int FBLowPassOrder= 4 4 0 % 
Filtering:Bandpower:StimResponseFilter float FBNotchCenter= 0 0 0 % 
Filtering:Bandpower:StimResponseFilter int FBNotchOrder= 4 4 0 % 
Filtering:Bandpower:StimResponseFilter float FBFilterGain= 1.0 1.0 0 % 
Filtering:Bandpower:StimResponseFilter int FBDownsample= 1 1 0 % 
Filtering:FreLowpass:StimResponseFilter float FLHighPassCorner= 0 0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLHighPassOrder= 2 2 0 % 
Filtering:FreLowpass:StimResponseFilter float FLLowPassCorner= 10 10 0 % 
Filtering:FreLowpass:StimResponseFilter int FLLowPassOrder= 4 4 0 % 
Filtering:FreLowpass:StimResponseFilter float FLNotchCenter= 0 0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLNotchOrder= 4 4 0 % 
Filtering:FreLowpass:StimResponseFilter float FLFilterGain= 1.0 1.0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLDownsample= 0 0 0 % 
StimResponseVis:StimResponseVis int VisImageWidth= 500 % 0 % // native image width
StimResponseVis:StimResponseVis int VisImageHeight= 500 % 0 % // native image height
StimResponseVis:StimResponseVis int VisImageBackground= 0x808080 // image background color (color)
StimResponseVis:StimResponseVis int VisImageDecimation= 1 % 1 % // update on every nth frame only
StimResponseVis:StimResponseVis float ActivateThreshold= 4 4 0 % // Threshold to determine if the input is activated
StimResponseVis:StimResponseVis float ProportionToInputSignal= 2 2 0 % // the proportion of the size of red dot to input 
StimResponseVis:StimResponseVis list BadChList= 7 31 38 42 45 125 138 63 // bad channels, 0 or empty for unipolar measurement
StimResponseVis:StimResponseVis int NumIterBeforeAvg= 1 1 0 % // number of iteration before doing avg
StimResponseVis:StimResponseVis int IterationBeforeRestartAvg= 201 201 0 % // number of iteration to restart avg
StimResponseVis:StimResponseVis matrix ElectrodeLocation= 138 3 1 -2679 132 2 -2727 435 3 -2754 738 4 -2802 1047 5 -2379 171 6 -2424 462 7 -2463 774 8 -2511 1086 9 -2076 198 10 -2124 501 11 -2151 813 12 -2208 1134 13 -1764 255 14 -1812 549 15 -1839 870 16 -1896 1161 17 -1473 294 18 -1500 585 19 -1539 897 20 -1605 1209 21 -1152 342 22 -1209 642 23 -1257 945 24 -1284 1254 25 -858 378 26 -906 681 27 -936 990 28 -972 1302 29 -1056 1812 30 -1134 2313 31 -1209 2820 32 -549 408 33 -606 708 34 -633 1029 35 -690 1332 36 -756 1860 37 -822 2340 38 -897 2859 39 -246 462 40 -285 765 41 -330 1068 42 -369 1398 43 -444 1887 44 -519 2379 45 -585 2907 46 66 510 47 27 804 48 -30 1113 49 -66 1425 50 -144 1926 51 -210 2433 52 -285 2943 53 357 549 54 309 849 55 264 1152 56 243 1482 57 150 1971 58 84 2472 59 18 2973 60 669 576 61 621 897 62 585 1200 63 528 1500 64 453 2010 65 396 2511 66 309 3018 67 -2433 -3018 68 -2520 -2499 69 -2595 -1989 70 -2661 -1479 71 -2727 -969 72 -2802 -441 73 -1926 -2931 74 -2001 -2433 75 -2085 -1914 76 -2142 -1404 77 -2217 -885 78 -2292 -366 79 -1416 -2865 80 -1509 -2346 81 -1575 -1830 82 -1632 -1320 83 -1719 -828 84 -1794 -300 85 -924 -2790 86 -990 -2280 87 -1077 -1773 88 -1152 -1272 89 -1209 -762 90 -1293 -243 91 -426 -2724 92 -483 -2205 93 -567 -1698 94 -633 -1179 95 -690 -678 96 -783 -168 97 93 -2658 98 0 -2130 99 -48 -1620 100 -153 -1122 101 -198 -594 102 -264 -102 103 603 -2574 104 519 -2082 105 441 -1545 106 366 -1047 107 300 -546 108 225 -18 109 1092 -2517 110 1008 -2007 111 951 -1509 112 885 -981 113 810 -471 114 735 39 115 4017 -1479 116 3507 -1536 117 3018 -1611 118 2508 -1686 119 1989 -1764 120 1470 -1830 121 3846 -810 122 3339 -885 123 2829 -933 124 2346 -1017 125 1848 -1083 126 1329 -1167 127 3282 -480 128 2754 -462 129 2271 -453 130 1752 -432 131 3384 915 132 2970 606 133 2574 285 134 2169 -36 135 -4020 -207 136 -3867 -555 137 -3717 -867 138 -3585 -1215 // electrodes Location 
System:Command%20Line%20Arguments variant NumberOfProcessors= 1 1 1 1 
System:Command%20Line%20Arguments variant MatlabWD= ./ccep ./ccep ./ccep ./ccep 
System string OperatorAddress= 127.0.0.1:4001 
System:Core%20Connections string SignalProcessingIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string SignalProcessingPort= 50442 // (readonly)(noedit)
System:Version matrix SignalProcessingVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T19:12:34Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalProcessing version information (noedit)(readonly)
System:Configuration matrix SignalProcessingFilterChain= 2 { Filter%20Name Position%20String } StimResponseFilter 2.B StimResponseVis 2.Z // SignalProcessing filter chain (noedit)(readonly)
System:Configuration matrix Filters= 11 1 /2/StimResponseFilter /2/StimResponseVis /3/ConnectorInput /3/KeystrokeFilter /3/ConnectorOutput /3/gEstimFilter /1/DataIOFilter /1/FilePlaybackADC /1/BCI2000FileWriter /1/AlignmentFilter /1/TransmissionFilter // Filter Directory (noedit)(readonly)
Visualize:Processing%20Stages int VisualizeStimResponseFilter= 0 0 0 1 // Visualize StimResponseFilter output (boolean)
Visualize:Processing%20Stages int VisualizeStimResponseVis= 0 0 0 1 // Visualize StimResponseVis output (boolean)
Connector:FilePlaybackADC list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:FilePlaybackADC string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Application:FilePlaybackADC string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:FilePlaybackADC string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:FilePlaybackADC string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
Connector:FilePlaybackADC string ConnectorOutputAddress= % localhost:20321 % % // one or more IP:Port combinations, e.g. localhost:20321
gEstim:gEstim:gEstimFilter int ActivateEstim= 0 0 0 1 // allow use of g.Estim device (boolean)
gEstim:Stimulation:gEstimFilter string StimulationExpression= % // Expression to start g.Estim stimulation
gEstim:Stimulation:gEstimFilter string AbortExpression= % // Expression to abort g.Estim stimulation
gEstim:Stimulation:gEstimFilter int Modularity= 1 1 0 1 // Modularity of pulses: 1 Biphasic, 0 Monophasic (enumeration)
gEstim:Stimulation:gEstimFilter int Polarity= 1 1 0 1 // Polarity of pulses: 1 Alternating, 0 Steady (enumeration)
gEstim:Stimulation:gEstimFilter int PulseDuration= 50 50 50 1000 // Length of pulse in microseconds [10us]
gEstim:Stimulation:gEstimFilter int InterphaseDuration= 0 0 0 1000 // Length of interphase in microseconds [10us]
gEstim:Stimulation:gEstimFilter int Amplitude= 50 50 50 15000 // Amplitude of the pulse in microamps [10uA]
gEstim:Stimulation:gEstimFilter float Frequency= 0.1 0.1 0.1 500 // Frequency of the pulses in Hz [0.1Hz]
gEstim:Stimulation:gEstimFilter int NumOfPulses= 1 1 1 30000 // Number of pulses
gEstim:Stimulation:gEstimFilter float FrequencyOfTrains= 0.00001 0.00001 0.00001 5 // Frequency of trains [0.00001Hz]
gEstim:Stimulation:gEstimFilter int NumOfTrains= 1 1 1 1000 // Number of trains
gEstim:Stimulation:gEstimFilter int Jitter= 0 0 0 100 // Jitter of train [1%]
gEstim:Electrode:gEstimFilter int UsingCircleElectrode= 1 0 0 1 // Is the electrode a circle electrode (boolean)
gEstim:Electrode:gEstimFilter int CircleDiameter= 2000 2000 1000 90000 // Exposed diameter of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int UsingDepthElectrode= 0 0 0 1 // Is the electrode a depth electrode (boolean)
gEstim:Electrode:gEstimFilter int ContactDiameter= 2000 2000 1000 90000 // Contact diameter of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int ContactLength= 1000 1000 1000 90000 // Contact length of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int UsingOtherElectrode= 0 0 0 1 // Is the electrode neither circle nor depth (boolean)
gEstim:Electrode:gEstimFilter int ExposedSurfaceArea= 1750000000 1750000000 1750000000 30000000000 // Exposed surface area of electrode in square micrometers [1um^2]
System:Core%20Connections string ApplicationIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string ApplicationPort= 50460 // (readonly)(noedit)
System:Version matrix ApplicationVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T17:20:05Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // Application version information (noedit)(readonly)
System:Configuration matrix ApplicationFilterChain= 4 { Filter%20Name Position%20String } ConnectorInput 2.9999 KeystrokeFilter 3.1 ConnectorOutput 3.9999 gEstimFilter 3.C // Application filter chain (noedit)(readonly)
Visualize:Processing%20Stages int VisualizegEstimFilter= 0 0 0 1 // Visualize gEstimFilter output (boolean)
Storage:FilePlaybackADC string DataDirectory= ..\data\AMC\ElectricalCorticalStimuluation ..\data % % // path to top level data directory (directory)
Storage:FilePlaybackADC string SubjectName= ECOG Name % % // subject alias
Storage:FilePlaybackADC string SubjectSession= 001 001 % % // three-digit session number
Storage:FilePlaybackADC string SubjectRun= 04 00 % % // two-digit run number
Storage:FilePlaybackADC string ID_System= % // BCI2000 System Code
Storage:FilePlaybackADC string ID_Amp= % // BCI2000 Amp Code
Storage:FilePlaybackADC string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:FilePlaybackADC int VisualizeTiming= 1 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:FilePlaybackADC int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:FilePlaybackADC int VisualizeSourceDecimation= auto auto % % // decimation factor for raw brain signal
Visualize:FilePlaybackADC int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:FilePlaybackADC int VisualizeSourceTime= 8s 2s 0 % // how much time in Source visualization
Visualize:FilePlaybackADC int SourceMin= -100uV // raw signal vis Min Value
Visualize:FilePlaybackADC int SourceMax= 100uV // raw signal vis Max Value
Source:FilePlaybackADC int SourceCh= 141 // number of digitized and stored channels
Source:FilePlaybackADC int SampleBlockSize= 240 // number of samples transmitted at a time
Source:FilePlaybackADC int SamplingRate= 4800 // sampling rate
Source:FilePlaybackADC list ChannelNames= 0 // list of channel names
Source:FilePlaybackADC list SourceChOffset= 141 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 // Offset for channels in A/D units
Source:FilePlaybackADC list SourceChGain= 141 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV // gain for each channel (A/D units per physical unit)
System:Command%20Line%20Arguments variant PlaybackFileName= ../data/CCEP/CCEP_amc071.dat ../data/CCEP/CCEP_amc071.dat ../data/CCEP/CCEP_amc071.dat ../data/CCEP/CCEP_amc071.dat 
System:Command%20Line%20Arguments variant PlaybackStates= 1 1 1 1 
System:Command%20Line%20Arguments variant PlaybackStartTime= 60s 60s 60s 60s 
Source:FilePlaybackADC int SourceBufferSize= 2s 2s % % // size of data acquisition ring buffer (in blocks or seconds)
Source:FilePlaybackADC int AcquisitionMode= 0 0 0 2 // data acquisition mode:  0: analog signal acquisition, 1: calibration signal, 2: impedance measurement (enumeration)
Source:FilePlaybackADC list RefChList= 0 // reference channel for each amp, 0 or empty for unipolar measurement
Source:FilePlaybackADC int ActiveElectrodes= % 0 0 1 // assume active electrodes for impedance measurement
Source:FilePlaybackADC int EnableDigitalInput= 1 0 0 1 // enable digital inputs (boolean)
Source:FilePlaybackADC int EnableSampleCounter= 0 0 0 1 // use sample counter to detect data loss (boolean)
Source:FilePlaybackADC int EnableHoldInput= 0 0 0 1 // enable hold input (boolean)
Source:FilePlaybackADC int IOQueueSize= 4 auto 2 % // number of transfer requests to keep posted during acquisition
Source:FilePlaybackADC list DeviceIDs= 1 HA-2012.04.09 // list of devices to be used
Source:FilePlaybackADC string DeviceIDMaster= HA-2012.04.09 // deviceID for the device whose SYNC goes to the slaves
Source:FilePlaybackADC intlist SourceChList= 141 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 // list of channels to digitize, in terms of physical inputs numbered across all devices
Source:FilePlaybackADC intlist SourceChDevices= 1 141 // number of digitized channels per device
Source:FilePlaybackADC int FilterEnabled= 0 0 0 1 // Enable pass band filter (boolean)
Source:FilePlaybackADC float FilterHighPass= 0.1 // high pass filter for pass band
Source:FilePlaybackADC float FilterLowPass= 60 // low pass filter for pass band
Source:FilePlaybackADC int NotchEnabled= 0 0 0 1 // Enable notch filter (boolean)
Source:FilePlaybackADC float NotchFrequency= 60Hz // notch filter frequency
Application:FilePlaybackADC int WindowWidth= 640 640 0 % // width of Application window
Application:FilePlaybackADC int WindowHeight= 480 480 0 % // height of Application window
Application:FilePlaybackADC int WindowLeft= 0 0 % % // screen coordinate of Application window's left edge
Application:FilePlaybackADC int WindowTop= 0 0 % % // screen coordinate of Application window's top edge
Application:FilePlaybackADC string WindowBackgroundColor= 0xEEEEEE 0x505050 % % // Application window background color (color)
Visualize:FilePlaybackADC int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:FilePlaybackADC int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:FilePlaybackADC int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Visualize:FilePlaybackADC int ShowAppLog= 1 0 0 1 // Show application log window (boolean)
Application:FilePlaybackADC float PreRunDuration= 1s 1 0 % // pause preceding first sequence
Application:FilePlaybackADC float PostRunDuration= 1s 0 0 % // pause following last sequence
Application:FilePlaybackADC float PreSequenceDuration= 0s 2s 0 % // pause preceding sequences/sets of intensifications
Application:FilePlaybackADC float PostSequenceDuration= 0s 2s 0 % // pause following sequences/sets of intensifications
Application:FilePlaybackADC float StimulusDuration= 7200s 40ms 0 % // stimulus duration
Application:FilePlaybackADC string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:FilePlaybackADC float ISIMinDuration= 0s 80ms 0 % // minimum duration of inter-stimulus interval
Application:FilePlaybackADC float ISIMaxDuration= 0s 80ms 0 % // maximum duration of inter-stimulus interval
Application:FilePlaybackADC int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:FilePlaybackADC int DisplayResults= 1 1 0 1 // display results of copy/free spelling (boolean)
Application:FilePlaybackADC int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:FilePlaybackADC float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:FilePlaybackADC intlist Sequence= 12 1 2 3 4 5 6 7 8 9 10 11 12 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:FilePlaybackADC int SequenceType= 0 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:FilePlaybackADC int NumberOfSequences= 1 1 0 % // number of sequence repetitions
Application:FilePlaybackADC intlist ToBeCopied= 1 1 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:FilePlaybackADC string UserComment= Electrica%20lCortica%20lStimuluation // User comments for a specific run
Application:FilePlaybackADC matrix Stimuli= { caption icon audio StimulusDuration AudioVolume } { stimulus1 2 3 4 5 6 7 8 9 10 11 12 } 120%20min 110%20min 100%20min 90%20min 80%20min 70%20min 60%20min 50%20min 40%20min 30%20min 20%20min 10%20min % % % % % % % % % % % % % % % % % % % % % % % % 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s % % % % % % % % % % % % // captions and icons to be displayed, av media to be played for different stimuli
Application:FilePlaybackADC matrix FocusOn= { caption icon audio } { focuson } Please%20focus%20on images\focuson.bmp sounds\uh-uh.wav // initial announcement what to focus on
Application:FilePlaybackADC matrix Result= { caption icon audio } { result } The%20result%20was images\result.bmp sounds\uh-uh.wav // final result announcement 
Application:FilePlaybackADC int StimulusWidth= 0 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:FilePlaybackADC int CaptionHeight= 33 0 0 100 // Height of stimulus caption text in percent of screen height
Application:FilePlaybackADC string CaptionColor= 0x000000 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:FilePlaybackADC string BackgroundColor= 0xEEEEEE 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:FilePlaybackADC int CaptionSwitch= 1 1 0 1 // Present captions (boolean)
Application:FilePlaybackADC int IconSwitch= 0 1 0 1 // Present icon files (boolean)
Application:FilePlaybackADC int AVSwitch= 0 0 0 1 // Present media files (boolean)
Application:FilePlaybackADC float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:FilePlaybackADC int AVPlayToEnd= 1 1 0 1 // Never abort playback of media files (boolean)
Application:FilePlaybackADC int AudioSwitch= 0 1 0 1 // Present audio files (boolean)(superseded by AVSwitch)
Application:FilePlaybackADC string Language= Default Default % % // Language for user messages
Application:FilePlaybackADC matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages
Filtering:FilePlaybackADC string StartRunExpression= % // expression executed on StartRun
Filtering:FilePlaybackADC string StopRunExpression= % // expression executed on StopRun
Filtering:FilePlaybackADC matrix Expressions= 1 1 % // expressions used to compute the output of the ExpressionFilter (rows are channels; empty matrix for none)
Visualize:FilePlaybackADC int VisualizeExpressionFilter= 0 0 0 1 // Visualize ExpressionFilter output (boolean)
Source:Playback:FilePlaybackADC list PlaybackChList= 0 // a list of channels to acquire (empty for all). Use indices, or labels from the ChannelNames as they were recorded in the file.
Source:Playback:FilePlaybackADC float PlaybackSpeed= 1 1 0 100 // a value indicating the factor by which the acquisition should be sped up
Source:Playback:FilePlaybackADC int PlaybackLooped= 0 0 0 1 // loop playback at the end of the data file instead of suspending execution (boolean)
Source:Playback:FilePlaybackADC int PlaybackReverseData= 0 0 0 1 // play the biosignal data backwards - does not affect state playback (boolean)
System:Randomization int RandomizationWarning= 0 1 0 1 // warn if subsequent Runs have identical RandomSeed value (boolean)
Storage:BCI2000FileWriter string FileFormat= dat // format of data file (readonly)
Storage:Documentation:BCI2000FileWriter string StorageTime= % // time of beginning of data storage
Source int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
Source floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source list TransmitChList= 141 141 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 // list of transmitted channels: Channel names may contain * and ? wildcards,  and character ranges enclosed in []; wildcard patterns may be negated by prepending an exclamation mark.  Ranges of channels may be specified using : or - to separate begin from end.
System:Protocol:EventLink int EventLink= 1 1 0 1 // Send events from Operator to Source module (boolean)
Storage:FilePlaybackADC string DataFile= $%7bSubjectName%7d$%7bSubjectSession%7d/$%7bSubjectName%7dS$%7bSubjectSession%7dR$%7bSubjectRun%7d.$%7bFileFormat%7d // name of data file relative to DataDirectory
System:Core%20Connections string SignalSourceIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string SignalSourcePort= 50416 // (readonly)(noedit)
System:Version matrix SignalSourceVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-08-03T20:21:49Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalSource version information (noedit)(readonly)
System:Configuration matrix SignalSourceFilterChain= 8 { Filter%20Name Position%20String } DataIOFilter 0 FilePlaybackADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain (noedit)(readonly)
Visualize int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
System:Randomization int RandomSeed= 6807 0 % % // seed for the BCI2000 pseudo random number generator (readonly)
System:State%20Vector int StateVectorLength= 49 16 % % // length of the state vector in bytes (noedit)(readonly)
