Visualize:Property%20Sets:FilePlaybackADC matrix VisPropertySets= 0 1 // row titles are properties in the form "SRCD.Left", columns are property sets
System:Version matrix OperatorVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T17:20:05Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // operator module version information (noedit)(readonly)
System:Protocol int AutoConfig= 1 1 0 1 // Use AutoConfig protocol extension (boolean)
System:Protocol int OperatorBackLink= 1 1 0 1 // Send final state and signal information to Operator (boolean)
System:Core%20Connections string OperatorIP= 127.0.0.1 127.0.0.1 % % // the Operator module's IP (noedit)(readonly)
Visualize:StimResponseFilter matrix StimulusMarkers= 2 1 StimulusBegin StimulusEnd // Time-valued parameters that will be indicated by markers
Filtering:StimResponseFilter int EpochLength= 400ms 400ms 0 % // Length of data epoch from stimulus onset
Filtering:StimResponseFilter int StimulusLength= 48 48 0 % // Length of Digital Input Stimulus
Filtering:StimResponseFilter string DigitalInputNum= DigitalInput4 // Digital Input nemuber
Visualize:StimResponseFilter int VisualizeAvgTimeResponse= 1 0 0 1 // Visualize current epochs (0=no 1=yes) (boolean)
Visualize:StimResponseFilter int VisualizeFre= 1 0 0 1 // Visualize frequency response (0=no 1=yes) (boolean)
Visualize:StimResponseFilter int VisualizeTime= 1 0 0 1 // Visualize time response (0=no 1=yes) (boolean)
Filtering:StimResponseFilter list ReRefChList= 1 1 // reference channel for each amp, 0 or empty for unipolar measurement
Filtering:StimResponseFilter bool StimTriggerType= 0 0 0 1 // if use signal the stimulus can only be on channel one
Filtering:StimResponseFilter int MoveStimForward= 2 2 0 % // Move forward xx number of elements
Filtering:Voltage:StimResponseFilter float TBHighPassCorner= 0.1 0.1 0 % 
Filtering:Voltage:StimResponseFilter int TBHighPassOrder= 2 2 0 % 
Filtering:Voltage:StimResponseFilter float TBLowPassCorner= 170 170 0 % 
Filtering:Voltage:StimResponseFilter int TBLowPassOrder= 4 4 0 % 
Filtering:Voltage:StimResponseFilter float TBNotchCenter= 0 0 0 % 
Filtering:Voltage:StimResponseFilter int TBNotchOrder= 4 4 0 % 
Filtering:Voltage:StimResponseFilter float TBFilterGain= 1.0 1.0 0 % 
Filtering:Voltage:StimResponseFilter int TBDownsample= 1 1 0 % 
Filtering:Bandpower:StimResponseFilter float FBHighPassCorner= 70 70 0 % 
Filtering:Bandpower:StimResponseFilter int FBHighPassOrder= 2 2 0 % 
Filtering:Bandpower:StimResponseFilter float FBLowPassCorner= 170 170 0 % 
Filtering:Bandpower:StimResponseFilter int FBLowPassOrder= 4 4 0 % 
Filtering:Bandpower:StimResponseFilter float FBNotchCenter= 0 0 0 % 
Filtering:Bandpower:StimResponseFilter int FBNotchOrder= 4 4 0 % 
Filtering:Bandpower:StimResponseFilter float FBFilterGain= 1.0 1.0 0 % 
Filtering:Bandpower:StimResponseFilter int FBDownsample= 1 1 0 % 
Filtering:FreLowpass:StimResponseFilter float FLHighPassCorner= 0 0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLHighPassOrder= 2 2 0 % 
Filtering:FreLowpass:StimResponseFilter float FLLowPassCorner= 10 10 0 % 
Filtering:FreLowpass:StimResponseFilter int FLLowPassOrder= 4 4 0 % 
Filtering:FreLowpass:StimResponseFilter float FLNotchCenter= 0 0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLNotchOrder= 4 4 0 % 
Filtering:FreLowpass:StimResponseFilter float FLFilterGain= 1.0 1.0 0 % 
Filtering:FreLowpass:StimResponseFilter int FLDownsample= 0 0 0 % 
StimResponseVis:StimResponseVis int VisImageWidth= 500 % 0 % // native image width
StimResponseVis:StimResponseVis int VisImageHeight= 500 % 0 % // native image height
StimResponseVis:StimResponseVis int VisImageBackground= 0x808080 // image background color (color)
StimResponseVis:StimResponseVis int VisImageDecimation= 1 % 1 % // update on every nth frame only
StimResponseVis:StimResponseVis float ActivateThreshold= 4 4 0 % // Threshold to determine if the input is activated
StimResponseVis:StimResponseVis float ProportionToInputSignal= 8 2 0 % // the proportion of the size of red dot to input 
StimResponseVis:StimResponseVis list BadChList= 4 22 32 77 82 // bad channels, 0 or empty for unipolar measurement
StimResponseVis:StimResponseVis int NumIterBeforeAvg= 1 1 0 % // number of iteration before doing avg
StimResponseVis:StimResponseVis int IterationBeforeRestartAvg= 201 201 0 % // number of iteration to restart avg
StimResponseVis:StimResponseVis matrix ElectrodeLocation= 88 3 1 3951 2715 2 3951 3183 3 3951 3687 4 3969 4155 5 3249 2733 6 3231 3183 7 3213 3651 8 3195 4155 9 -2910 -4455 10 -2355 -4107 11 -1824 -3744 12 -1296 -3396 13 -765 -3048 14 -2505 -5028 15 -2007 -4665 16 -1461 -4302 17 -933 -3987 18 -417 -3624 19 -4002 -3396 20 -3564 -2943 21 -3126 -2457 22 -2688 -2004 23 -2277 -1551 24 -3504 -3879 25 -3066 -3396 26 -2625 -2943 27 -2217 -2505 28 -1764 -2034 29 -3549 369 30 -3066 -9 31 -2520 -402 32 -2037 -750 33 -2943 1686 34 -2655 1125 35 -2355 567 36 -2022 -9 37 807 1095 38 807 474 39 807 -174 40 822 -810 41 822 -1461 42 141 1080 43 156 459 44 126 -189 45 141 -795 46 141 -1446 47 -525 1095 48 -540 444 49 -525 -189 50 -510 -825 51 -510 -1446 52 -1221 1095 53 -1221 459 54 -1221 -189 55 -1221 -810 56 -1221 -1446 57 3984 1095 58 3363 1080 59 2712 1065 60 2076 1065 61 3984 219 62 3348 219 63 2712 234 64 2091 234 65 3999 -582 66 3363 -582 67 2742 -582 68 2076 -582 69 -2505 5028 70 -1839 5013 71 -1236 4998 72 -600 4998 73 51 4998 74 -2505 4287 75 -1899 4287 76 -1236 4302 77 -615 4287 78 36 4287 79 -2505 3333 80 -1869 3333 81 -1236 3333 82 -600 3333 83 36 3348 84 -2520 2652 85 -1869 2637 86 -1236 2637 87 -615 2652 88 51 2637 // electrodes Location 
System:Command%20Line%20Arguments variant NumberOfProcessors= 1 1 1 1 
System:Command%20Line%20Arguments variant MatlabWD= ./ccep ./ccep ./ccep ./ccep 
System string OperatorAddress= 127.0.0.1:4001 
System:Core%20Connections string SignalProcessingIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string SignalProcessingPort= 49562 // (readonly)(noedit)
System:Version matrix SignalProcessingVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T19:12:34Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalProcessing version information (noedit)(readonly)
System:Configuration matrix SignalProcessingFilterChain= 2 { Filter%20Name Position%20String } StimResponseFilter 2.B StimResponseVis 2.Z // SignalProcessing filter chain (noedit)(readonly)
System:Configuration matrix Filters= 11 1 /2/StimResponseFilter /2/StimResponseVis /3/ConnectorInput /3/KeystrokeFilter /3/ConnectorOutput /3/gEstimFilter /1/DataIOFilter /1/FilePlaybackADC /1/BCI2000FileWriter /1/AlignmentFilter /1/TransmissionFilter // Filter Directory (noedit)(readonly)
Visualize:Processing%20Stages int VisualizeStimResponseFilter= 0 0 0 1 // Visualize StimResponseFilter output (boolean)
Visualize:Processing%20Stages int VisualizeStimResponseVis= 0 0 0 1 // Visualize StimResponseVis output (boolean)
Connector:ConnectorInput:FilePlaybackADC list ConnectorInputFilter= 0 // list of state names or signal elements to allow, "*" for any, signal elements as in "Signal(1,0)"
Connector:ConnectorInput:FilePlaybackADC string ConnectorInputAddress= % localhost:20320 % % // IP address/port to read from, e.g. localhost:20320
Application:Human%20Interface%20Devices:KeystrokeFilter:FilePlaybackADC string KeystrokeStateName= % // State to be translated into keystrokes (0-F), empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter:FilePlaybackADC string KeystrokeExpression= % // Expression that evaluates to a virtual keycode, empty for off
Application:Human%20Interface%20Devices:KeystrokeFilter:FilePlaybackADC string KeystrokeExpressionOnStartRun= % // Expression that initializes expression variables on StartRun
Connector:ConnectorOutput:FilePlaybackADC string ConnectorOutputAddress= % localhost:20321 % % // one or more IP:Port combinations, e.g. localhost:20321
gEstim:gEstim:gEstimFilter int ActivateEstim= 0 0 0 1 // allow use of g.Estim device (boolean)
gEstim:Stimulation:gEstimFilter string StimulationExpression= % // Expression to start g.Estim stimulation
gEstim:Stimulation:gEstimFilter string AbortExpression= % // Expression to abort g.Estim stimulation
gEstim:Stimulation:gEstimFilter int Modularity= 1 1 0 1 // Modularity of pulses: 1 Biphasic, 0 Monophasic (enumeration)
gEstim:Stimulation:gEstimFilter int Polarity= 1 1 0 1 // Polarity of pulses: 1 Alternating, 0 Steady (enumeration)
gEstim:Stimulation:gEstimFilter int PulseDuration= 50 50 50 1000 // Length of pulse in microseconds [10us]
gEstim:Stimulation:gEstimFilter int InterphaseDuration= 0 0 0 1000 // Length of interphase in microseconds [10us]
gEstim:Stimulation:gEstimFilter int Amplitude= 50 50 50 15000 // Amplitude of the pulse in microamps [10uA]
gEstim:Stimulation:gEstimFilter float Frequency= 0.1 0.1 0.1 500 // Frequency of the pulses in Hz [0.1Hz]
gEstim:Stimulation:gEstimFilter int NumOfPulses= 1 1 1 30000 // Number of pulses
gEstim:Stimulation:gEstimFilter float FrequencyOfTrains= 0.00001 0.00001 0.00001 5 // Frequency of trains [0.00001Hz]
gEstim:Stimulation:gEstimFilter int NumOfTrains= 1 1 1 1000 // Number of trains
gEstim:Stimulation:gEstimFilter int Jitter= 0 0 0 100 // Jitter of train [1%]
gEstim:Electrode:gEstimFilter int UsingCircleElectrode= 1 0 0 1 // Is the electrode a circle electrode (boolean)
gEstim:Electrode:gEstimFilter int CircleDiameter= 2000 2000 1000 90000 // Exposed diameter of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int UsingDepthElectrode= 0 0 0 1 // Is the electrode a depth electrode (boolean)
gEstim:Electrode:gEstimFilter int ContactDiameter= 2000 2000 1000 90000 // Contact diameter of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int ContactLength= 1000 1000 1000 90000 // Contact length of the electrode in micrometers [1um]
gEstim:Electrode:gEstimFilter int UsingOtherElectrode= 0 0 0 1 // Is the electrode neither circle nor depth (boolean)
gEstim:Electrode:gEstimFilter int ExposedSurfaceArea= 1750000000 1750000000 1750000000 30000000000 // Exposed surface area of electrode in square micrometers [1um^2]
System:Core%20Connections string ApplicationIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string ApplicationPort= 49580 // (readonly)(noedit)
System:Version matrix ApplicationVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-12-07T17:20:05Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // Application version information (noedit)(readonly)
System:Configuration matrix ApplicationFilterChain= 4 { Filter%20Name Position%20String } ConnectorInput 2.9999 KeystrokeFilter 3.1 ConnectorOutput 3.9999 gEstimFilter 3.C // Application filter chain (noedit)(readonly)
Visualize:Processing%20Stages int VisualizegEstimFilter= 0 0 0 1 // Visualize gEstimFilter output (boolean)
Storage:Data%20Location:DataIOFilter:FilePlaybackADC string DataDirectory= ..\data\AMC\ElectricalCorticalStimuluation ..\data % % // path to top level data directory (directory)
Storage:Session:DataIOFilter:FilePlaybackADC string SubjectName= ECOG Name % % // subject alias
Storage:Session:DataIOFilter:FilePlaybackADC string SubjectSession= 001 001 % % // three-digit session number
Storage:Session:DataIOFilter:FilePlaybackADC string SubjectRun= 04 00 % % // two-digit run number
Storage:Documentation:DataIOFilter:FilePlaybackADC string ID_System= % // BCI2000 System Code
Storage:Documentation:DataIOFilter:FilePlaybackADC string ID_Amp= % // BCI2000 Amp Code
Storage:Documentation:DataIOFilter:FilePlaybackADC string ID_Montage= % // BCI2000 Cap Montage Code
Visualize:Timing:DataIOFilter:FilePlaybackADC int VisualizeTiming= 1 1 0 1 // visualize system timing (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int VisualizeSource= 1 1 0 1 // visualize raw brain signal (0=no, 1=yes) (boolean)
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int VisualizeSourceDecimation= auto auto % % // decimation factor for raw brain signal
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int VisualizeSourceBufferSize= auto auto % % // number of blocks to aggregate before sending to operator
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int VisualizeSourceTime= 8s 2s 0 % // how much time in Source visualization
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int SourceMin= -100uV // raw signal vis Min Value
Visualize:Source%20Signal:DataIOFilter:FilePlaybackADC int SourceMax= 100uV // raw signal vis Max Value
Source:Signal%20Properties:gHIampADC:FilePlaybackADC int SourceCh= 91 // number of digitized and stored channels
Source:Signal%20Properties:gHIampADC:FilePlaybackADC int SampleBlockSize= 240 // number of samples transmitted at a time
Source:Signal%20Properties:gHIampADC:FilePlaybackADC int SamplingRate= 4800 // sampling rate
Source:Signal%20Properties:gHIampADC:FilePlaybackADC list ChannelNames= 0 // list of channel names
Source:Signal%20Properties:gHIampADC:FilePlaybackADC list SourceChOffset= 141 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 // Offset for channels in A/D units
Source:Signal%20Properties:gHIampADC:FilePlaybackADC list SourceChGain= 141 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV 1muV // gain for each channel (A/D units per physical unit)
System:Command%20Line%20Arguments variant PlaybackFileName= ../data/CCEP/CCEP_new.dat ../data/CCEP/CCEP2.dat ../data/CCEP/CCEP2.dat ../data/CCEP/CCEP2.dat 
System:Command%20Line%20Arguments variant PlaybackStates= 1 1 1 1 
System:Command%20Line%20Arguments variant PlaybackStartTime= 60s 60s 60s 60s 
Source:Buffering:gHIampADC:FilePlaybackADC int SourceBufferSize= 2s 2s % % // size of data acquisition ring buffer (in blocks or seconds)
Source:Acquisition:gHIampADC:FilePlaybackADC int AcquisitionMode= 0 0 0 2 // data acquisition mode:  0: analog signal acquisition, 1: calibration signal, 2: impedance measurement (enumeration)
Source:Acquisition:gHIampADC:FilePlaybackADC list RefChList= 0 // reference channel for each amp, 0 or empty for unipolar measurement
Source:Acquisition:gHIampADC:FilePlaybackADC int ActiveElectrodes= % 0 0 1 // assume active electrodes for impedance measurement
Source:Acquisition:gHIampADC:FilePlaybackADC int EnableDigitalInput= 1 0 0 1 // enable digital inputs (boolean)
Source:Acquisition:gHIampADC:FilePlaybackADC int EnableSampleCounter= 0 0 0 1 // use sample counter to detect data loss (boolean)
Source:Acquisition:gHIampADC:FilePlaybackADC int EnableHoldInput= 0 0 0 1 // enable hold input (boolean)
Source:Acquisition:gHIampADC:FilePlaybackADC int IOQueueSize= 4 auto 2 % // number of transfer requests to keep posted during acquisition
Source:Multiple%20Devices:gHIampADC:FilePlaybackADC list DeviceIDs= 1 HA-2012.04.09 // list of devices to be used
Source:Multiple%20Devices:gHIampADC:FilePlaybackADC string DeviceIDMaster= HA-2012.04.09 // deviceID for the device whose SYNC goes to the slaves
Source:Multiple%20Devices:gHIampADC:FilePlaybackADC intlist SourceChList= 91 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 // list of channels to digitize, in terms of physical inputs numbered across all devices
Source:Multiple%20Devices:gHIampADC:FilePlaybackADC intlist SourceChDevices= 1 91 // number of digitized channels per device
Source:DSP:gHIampADC:FilePlaybackADC int FilterEnabled= 0 0 0 1 // Enable pass band filter (boolean)
Source:DSP:gHIampADC:FilePlaybackADC float FilterHighPass= 0.1 // high pass filter for pass band
Source:DSP:gHIampADC:FilePlaybackADC float FilterLowPass= 60 // low pass filter for pass band
Source:DSP:gHIampADC:FilePlaybackADC int NotchEnabled= 0 0 0 1 // Enable notch filter (boolean)
Source:DSP:gHIampADC:FilePlaybackADC float NotchFrequency= 60Hz // notch filter frequency
Filtering:ExpressionFilter:FilePlaybackADC string StartRunExpression= % // expression executed on StartRun
Filtering:ExpressionFilter:FilePlaybackADC string StopRunExpression= % // expression executed on StopRun
Filtering:ExpressionFilter:FilePlaybackADC matrix Expressions= 1 1 % // expressions used to compute the output of the ExpressionFilter (rows are channels; empty matrix for none)
Visualize:Processing%20Stages:FilePlaybackADC int VisualizeExpressionFilter= 0 0 0 1 // Visualize ExpressionFilter output (boolean)
Application:Application%20Window:ApplicationWindow:FilePlaybackADC int WindowWidth= 640 640 0 % // width of Application window
Application:Application%20Window:ApplicationWindow:FilePlaybackADC int WindowHeight= 480 480 0 % // height of Application window
Application:Application%20Window:ApplicationWindow:FilePlaybackADC int WindowLeft= 0 0 % % // screen coordinate of Application window's left edge
Application:Application%20Window:ApplicationWindow:FilePlaybackADC int WindowTop= 0 0 % % // screen coordinate of Application window's top edge
Application:Application%20Window:ApplicationWindow:FilePlaybackADC string WindowBackgroundColor= 0xEEEEEE 0x505050 % % // Application window background color (color)
Visualize:Application%20Window:ApplicationWindow:FilePlaybackADC int VisualizeApplicationWindow= 0 0 0 1 // Display miniature copy of Application window (boolean)
Visualize:Application%20Window:ApplicationWindow:FilePlaybackADC int AppWindowSpatialDecimation= 8 8 1 % // Application window decimation (shrinking) factor
Visualize:Application%20Window:ApplicationWindow:FilePlaybackADC int AppWindowTemporalDecimation= 4 16 1 % // Application window time decimation factor
Visualize:Application%20Log:ApplicationBase:FilePlaybackADC int ShowAppLog= 1 0 0 1 // Show application log window (boolean)
Application:Sequencing:StimulusTask:FilePlaybackADC float PreRunDuration= 1s 1 0 % // pause preceding first sequence
Application:Sequencing:StimulusTask:FilePlaybackADC float PostRunDuration= 1s 0 0 % // pause following last sequence
Application:Sequencing:StimulusTask:FilePlaybackADC float PreSequenceDuration= 0s 2s 0 % // pause preceding sequences/sets of intensifications
Application:Sequencing:StimulusTask:FilePlaybackADC float PostSequenceDuration= 0s 2s 0 % // pause following sequences/sets of intensifications
Application:Sequencing:StimulusTask:FilePlaybackADC float StimulusDuration= 7200s 40ms 0 % // stimulus duration
Application:Sequencing:StimulusTask:FilePlaybackADC string EarlyOffsetExpression= % // abort stimulus if this expression becomes true
Application:Sequencing:StimulusTask:FilePlaybackADC float ISIMinDuration= 0s 80ms 0 % // minimum duration of inter-stimulus interval
Application:Sequencing:StimulusTask:FilePlaybackADC float ISIMaxDuration= 0s 80ms 0 % // maximum duration of inter-stimulus interval
Application:Result%20Processing:StimulusTask:FilePlaybackADC int InterpretMode= 0 0 0 2 // interpretation of results: 0 none, 1 online free mode, 2 copy mode (enumeration)
Application:Result%20Processing:StimulusTask:FilePlaybackADC int DisplayResults= 1 1 0 1 // display results of copy/free spelling (boolean)
Application:Result%20Processing:StimulusTask:FilePlaybackADC int AccumulateEvidence= 0 0 0 1 // accumulate evidence until a selection is made (boolean)
Application:Result%20Processing:StimulusTask:FilePlaybackADC float MinimumEvidence= 0 0 0 % // do not make a selection unless target evidence exceeds this value. For a normalized classifier, MinimumEvidence approximates -2.3*log10(Error Probability)
Application:Sequencing:StimulusPresentationTask:FilePlaybackADC intlist Sequence= 12 1 2 3 4 5 6 7 8 9 10 11 12 // Sequence in which stimuli are presented (deterministic mode)/ Stimulus frequencies for each stimulus (random mode)/ Ignored (P3Speller compatible mode)
Application:Sequencing:StimulusPresentationTask:FilePlaybackADC int SequenceType= 0 0 0 2 // Sequence of stimuli is 0 deterministic, 1 random, 2 P3Speller compatible (enumeration)
Application:Sequencing:StimulusPresentationTask:FilePlaybackADC int NumberOfSequences= 1 1 0 % // number of sequence repetitions
Application:Sequencing:StimulusPresentationTask:FilePlaybackADC intlist ToBeCopied= 1 1 1 1 % // Sequence in which stimuli need to be copied (only used in copy mode)
Application:Sequencing:StimulusPresentationTask:FilePlaybackADC string UserComment= Electrica%20lCortica%20lStimuluation // User comments for a specific run
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC matrix Stimuli= { caption icon audio StimulusDuration AudioVolume } { stimulus1 2 3 4 5 6 7 8 9 10 11 12 } 120%20min 110%20min 100%20min 90%20min 80%20min 70%20min 60%20min 50%20min 40%20min 30%20min 20%20min 10%20min % % % % % % % % % % % % % % % % % % % % % % % % 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s 600s % % % % % % % % % % % % // captions and icons to be displayed, av media to be played for different stimuli
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC matrix FocusOn= { caption icon audio } { focuson } Please%20focus%20on images\focuson.bmp sounds\uh-uh.wav // initial announcement what to focus on
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC matrix Result= { caption icon audio } { result } The%20result%20was images\result.bmp sounds\uh-uh.wav // final result announcement 
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int StimulusWidth= 0 0 0 100 // StimulusWidth in percent of screen width (zero for original pixel size)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int CaptionHeight= 33 0 0 100 // Height of stimulus caption text in percent of screen height
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC string CaptionColor= 0x000000 0x00FFFFFF 0x00000000 0xFFFFFFFF // Color of stimulus caption text (color)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC string BackgroundColor= 0xEEEEEE 0x00FFFF00 0x00000000 0xFFFFFFFF // Color of stimulus background (color)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int CaptionSwitch= 1 1 0 1 // Present captions (boolean)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int IconSwitch= 0 1 0 1 // Present icon files (boolean)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int AVSwitch= 0 0 0 1 // Present media files (boolean)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC float AudioVolume= 100 100 0 100 // Volume for audio playback in percent
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int AVPlayToEnd= 1 1 0 1 // Never abort playback of media files (boolean)
Application:Stimuli:StimulusPresentationTask:FilePlaybackADC int AudioSwitch= 0 1 0 1 // Present audio files (boolean)(superseded by AVSwitch)
Application:Localization:Localization:FilePlaybackADC string Language= Default Default % % // Language for user messages
Application:Localization:Localization:FilePlaybackADC matrix LocalizedStrings= { German } { TIME%20OUT%20!!! Waiting%20to%20start%20... } Zeit%20abgelaufen! Warte%20... // Localized user messages
Source:Playback:FilePlaybackADC list PlaybackChList= 0 // a list of channels to acquire (empty for all). Use indices, or labels from the ChannelNames as they were recorded in the file.
Source:Playback:FilePlaybackADC float PlaybackSpeed= 1 1 0 100 // a value indicating the factor by which the acquisition should be sped up
Source:Playback:FilePlaybackADC int PlaybackLooped= 0 0 0 1 // loop playback at the end of the data file instead of suspending execution (boolean)
Source:Playback:FilePlaybackADC int PlaybackReverseData= 0 0 0 1 // play the biosignal data backwards - does not affect state playback (boolean)
System:Randomization int RandomizationWarning= 0 1 0 1 // warn if subsequent Runs have identical RandomSeed value (boolean)
Storage:BCI2000FileWriter string FileFormat= dat // format of data file (readonly)
Storage:Documentation:BCI2000FileWriter string StorageTime= % // time of beginning of data storage
Source:Alignment:AlignmentFilter int AlignChannels= 0 0 0 1 // align channels in time (0=no, 1=yes)
Source:Alignment:AlignmentFilter floatlist SourceChTimeOffset= 0 0 % % // time offsets for all source channels (may be empty)
Source:Online%20Processing:TransmissionFilter list TransmitChList= 91 141 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 // list of transmitted channels: Channel names may contain * and ? wildcards,  and character ranges enclosed in []; wildcard patterns may be negated by prepending an exclamation mark.  Ranges of channels may be specified using : or - to separate begin from end.
System:Protocol:EventLink int EventLink= 1 1 0 1 // Send events from Operator to Source module (boolean)
Storage:Data%20Location:RunManager:FilePlaybackADC string DataFile= $%7bSubjectName%7d$%7bSubjectSession%7d/$%7bSubjectName%7dS$%7bSubjectSession%7dR$%7bSubjectRun%7d.$%7bFileFormat%7d // name of data file relative to DataDirectory
System:Core%20Connections string SignalSourceIP= 127.0.0.1 // (readonly)(noedit)
System:Core%20Connections string SignalSourcePort= 49536 // (readonly)(noedit)
System:Version matrix SignalSourceVersion= { Framework Revision Build Config Protocol } 1 3.05 N/A,%20N/A MSVC-17.0.61030.0-AMD64,%20release,%202017-08-03T20:21:49Z,%20schalkadmin@HR17699 USE_DYNAMIC_CRT:OFF%20USE_OPENMP:ON%20USE_PRECOMPILED_HEADERS:ON%20USE_ASSERTS_IN_RELEASE_BUILDS:OFF 2.3 // SignalSource version information (noedit)(readonly)
System:Configuration matrix SignalSourceFilterChain= 8 { Filter%20Name Position%20String } DataIOFilter 0 FilePlaybackADC 1 NullFileWriter 1 BCI2000FileWriter 1 EDFFileWriter 1 GDFFileWriter 1 AlignmentFilter 1.1 TransmissionFilter 1.2 // SignalSource filter chain (noedit)(readonly)
Visualize:Processing%20Stages int VisualizeAlignmentFilter= 0 0 0 1 // Visualize AlignmentFilter output (boolean)
Visualize:Processing%20Stages int VisualizeTransmissionFilter= 0 0 0 1 // Visualize TransmissionFilter output (boolean)
System:Randomization int RandomSeed= 3502 0 % % // seed for the BCI2000 pseudo random number generator (readonly)
System:State%20Vector int StateVectorLength= 32 16 % % // length of the state vector in bytes (noedit)(readonly)
